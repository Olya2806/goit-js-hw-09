{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAaC,SAASC,cAAc,uBACnBD,SAASC,cAAc,sBACvBD,SAASC,cAAc,wBACjCD,SAASC,cAAc,SAC/BC,iBAAiB,UA8BtB,WAAwB,IAnBxB,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCJ,EAAcC,EAAUC,GACzBG,MAAK,SAAAC,G,IAAGC,EAAQD,EAARL,SAAUO,EAAKF,EAALJ,MACjBO,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAI1DR,EAAcC,EAAUC,GACvBU,OAAM,SAAAN,G,IAAGC,EAAQD,EAARL,SAAUO,EAAKF,EAALJ,MACpBO,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAM3DR,CAAcC,SAAW,EAAGL,EAAWiB,MAAQjB,EAAWiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst promisesAmount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    // Fulfill\n  } else {\n    createPromise(position, delay)\n    .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    // Reject\n  }\n}\n\ncreatePromise(position + 1, delayInput.value + delayInput.value)\n\nfunction onFormSubmit() {\n  \n}"],"names":["parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","addEventListener","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","then","param","_$position","_$delay","console","log","concat","catch","value"],"version":3,"file":"03-promises.53dd5664.js.map"}