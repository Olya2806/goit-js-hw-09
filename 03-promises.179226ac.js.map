{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACnBD,SAASC,cAAc,sBACvBD,SAASC,cAAc,wBACjCD,SAASC,cAAc,SAC/BC,iBAAiB,UA8BtB,WAAwB,IAnBxB,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCJ,EAAcC,EAAUC,GACzBG,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAI5DP,EAAcC,EAAUC,GACvBQ,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,MACpBC,QAAQC,IAAI,sBAAoBH,QAAeC,MAAU,G,CAM7DP,CAAcM,SAAW,EAAGV,EAAWe,MAAQf,EAAWe","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst promisesAmount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    // Fulfill\n  } else {\n    createPromise(position, delay)\n    .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    // Reject\n  }\n}\n\ncreatePromise(position + 1, delayInput.value + delayInput.value)\n\nfunction onFormSubmit() {\n  \n}"],"names":["parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","addEventListener","$47d4ff9957288465$var$createPromise","position1","delay1","Math","random","then","position","delay","console","log","catch","value"],"version":3,"file":"03-promises.179226ac.js.map"}