{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAiBH,SAASC,cAAc,wBAK9C,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACTN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAdQN,SAASC,cAAc,SAC/Ba,iBAAiB,UAkBtB,SAAsBC,GACpBA,EAAMC,iBASN,IAPA,IAAMC,EAAQC,OAAOnB,EAAWoB,OAC1BC,EAAOF,OAAOhB,EAAeiB,OAC7BE,EAASH,OAAOf,EAAegB,OAGjCG,EAAYL,EAEPM,EAAM,EAAGA,GAAOF,EAAQE,GAAO,EACtCnB,EAAcmB,EAAKD,GAChBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEgB,GAAaF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst promisesAmount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n      setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n    }) \n}\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(delayInput.value);\n  const step = Number(delayStepInput.value);\n  const amount = Number(promisesAmount.value);\n  \n\n  let srepValue = delay;\n\n  for (let num = 1; num <= amount; num += 1){\n    createPromise(num, srepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    srepValue += step;\n  }\n}\n\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$promisesAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","srepValue","num","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.919c90d9.js.map"}