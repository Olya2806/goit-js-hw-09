{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAiBH,SAASC,cAAc,wBACjCD,SAASC,cAAc,SAC/BG,iBAAiB,UAoBtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAK,IAAIC,EAAM,EAAGA,GAAOC,EAAQD,EAE/BE,EAAcF,EAAM,EAAGG,EAAQH,EAAMI,GAClCC,MAAK,EAACC,SAAEA,EAAUC,MAAAC,MACjBC,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBL,QAAiBE,MAAU,IAEzEI,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAClBJ,EAAAnB,GAASoB,OAAOI,QAAQ,sBAAoBR,QAAeO,MAAU,G,IA5B5E,MAAMV,EAAQY,OAAOvB,EAAWwB,OACzBZ,EAAOW,OAAOpB,EAAeqB,OAC7Bf,EAASc,OAAOnB,EAAeoB,OAEvC,SAASd,EAAcI,EAAUW,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC9BC,YAAW,KACWC,KAAKC,SAAW,GAEtCJ,EAAQ,C,SAAEb,EAAUC,MAAAU,IAEpBG,EAAO,C,SAAEd,EAAUC,MAAAU,GAAQ,GAExBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst promisesAmount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\n const delay = Number(delayInput.value);\n  const step = Number(delayStepInput.value);\n  const amount = Number(promisesAmount.value);\n\nfunction createPromise(position, delay) {\n return new Promise((resolve, reject) => {\nsetTimeout(() => {\nconst shouldResolve = Math.random() > 0.3;\nif (shouldResolve) {\nresolve({ position, delay });\n} else {\nreject({ position, delay });\n}\n}, delay);\n});\n}\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  for (let num = 0; num <= amount; num + 1) {\n    \n    createPromise(num + 1, delay + num * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$promisesAmount","addEventListener","event","preventDefault","num","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","then","position","delay","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","Number","value","delay1","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.984f7b3e.js.map"}